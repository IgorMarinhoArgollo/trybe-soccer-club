{
  "openapi": "3.0.0",
  "info": {
    "title": "Trybe Soccer Club - Soccer Ranking Project",
    "description": "This is an eductional project to practice the use of TypeScript with Express on a backend application and the use of an ORM (Sequelize) to create and seed the project's database. It was developed in TS and also used tools as helmet, limit-rate, morgan, JWT authentication and swagger to prepara the docs. This project was developed during the Backend Module of Trybe Course. The frontend part of this project was made available by Trybe",
    "version": "1.0.0",
    "contact": {
      "email": "igormarinhoargollo@gmail.com"
    }
  },
  "server": {
    "url": "http://localhost:3001",
    "description": "Trybe Soccer Club - Soccer Ranking Project"
  },
  "paths": {
    "/login": {
      "post": {
        "summary": "Login endpoint that returns an JWT Bearer",
        "description": "This route is log the user in returning a bearer",
        "tags": [
          "login"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "required": "true"
                  },
                  "password": {
                    "type": "string",
                    "required": "true"
                  }
                }
              },
              "example": {
                "email": "admin@admin.com",
                "password": "secret_admin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logged In",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "login": {
                    "value": {
                      "token": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImlhdCI6MTY2MTgwODE4MSwiZXhwIjoxNjYyNDEyOTgxfQ.usrh36s9E0P45OovNFLGbmuMz8x4C4mNQFoJs2dLLl8"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login/validate": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "The role verifier endpoint",
        "description": "An endpoint that provided an token returns the role od the user",
        "tags": [
          "login"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "headers",
            "description": "Token to get the role",
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "role": {
                    "value": {
                      "role": "admin"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Token not Found"
                }
              }
            }
          }
        }
      }
    },
    "/teams": {
      "get": {
        "summary": "Get all teams",
        "description": "This route is responsible for getting all teams on database",
        "tags": [
          "teams"
        ],
        "responses": {
          "200": {
            "description": "All teams",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "teamName": "Avaí/Kindermann"
                  },
                  {
                    "id": 2,
                    "teamName": "Bahia"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/teams/{id}": {
      "get": {
        "summary": "Get team by Id",
        "description": "This route is responsible for getting an team by Id on database",
        "tags": [
          "teams"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id to get",
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Found Team Info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                },
                "example": {
                  "id": 1,
                  "teamName": "Avaí/Kindermann"
                }
              }
            }
          },
          "400": {
            "description": "Team not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Team Not Found"
                }
              }
            }
          }
        }
      }
    },
    "/matches": {
      "get": {
        "summary": "Get all matches",
        "description": "This route is responsible for get all matches in the database.",
        "tags": [
          "matches"
        ],
        "responses": {
          "200": {
            "description": "Found Matches",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Match"
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "homeTeam": 16,
                    "homeTeamGoals": 1,
                    "awayTeam": 8,
                    "awayTeamGoals": 1,
                    "inProgress": false,
                    "teamHome": {
                      "teamName": "São Paulo"
                    },
                    "teamAway": {
                      "teamName": "Grêmio"
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create match",
        "description": "This route is responsible for creating a new match.",
        "tags": [
          "matches"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/MatchToCreate"
              },
              "example": {
                "homeTeam": 7,
                "awayTeam": 11,
                "homeTeamGoals": 3,
                "awayTeamGoals": 0
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Match successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/CreatedMatch"
                },
                "example": {
                  "id": 49,
                  "homeTeam": 7,
                  "awayTeam": 11,
                  "homeTeamGoals": 3,
                  "awayTeamGoals": 0,
                  "inProgress": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid Fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Invalid Fields"
                }
              }
            }
          }
        }
      }
    },
    "/matches/{id}": {
      "patch": {
        "summary": "Update score of a game",
        "description": "This route is responsible for updating the score of a match.",
        "tags": [
          "matches"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Match id to update score",
            "required": "true"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "homeTeamGoals": {
                    "type": "number",
                    "required": "true"
                  },
                  "awayTeamGoals": {
                    "type": "number",
                    "required": "true"
                  }
                }
              },
              "example": {
                "homeTeamGoals": 3,
                "awayTeamGoals": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Score successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Score Updated"
                }
              }
            }
          },
          "400": {
            "description": "Match not Found/ Invalid Field",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Match not Found"
                }
              }
            }
          }
        }
      }
    },
    "/matches/{id}/finish": {
      "patch": {
        "summary": "Update status of a game",
        "description": "This route is responsible for updating the status of a match.",
        "tags": [
          "matches"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Match id to update status",
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Match Finished",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Finished"
                }
              }
            }
          },
          "400": {
            "description": "Match not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Match not Found"
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard": {
      "get": {
        "summary": "Get the Leaderboard",
        "description": "This endpoint is responsible for getting the leaderboard from the database",
        "tags": [
          "leaderboard"
        ],
        "responses": {
          "200": {
            "description": "Leaderboard",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamPoints"
                  }
                },
                "example": [
                  {
                    "name": "Palmeiras",
                    "totalPoints": 13,
                    "totalGames": 5,
                    "totalVictories": 4,
                    "totalDraws": 1,
                    "totalLosses": 0,
                    "goalsFavor": 17,
                    "goalsOwn": 5,
                    "goalsBalance": 12,
                    "efficiency": "86.67"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/leaderboard/home": {
      "get": {
        "summary": "Get the Leaderboard by Home Ranking",
        "description": "This endpoint is responsible for getting the leaderboard by home ranking from the database",
        "tags": [
          "leaderboard"
        ],
        "responses": {
          "200": {
            "description": "Leaderboard",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamPoints"
                  }
                },
                "example": [
                  {
                    "name": "Santos",
                    "totalPoints": 9,
                    "totalGames": 3,
                    "totalVictories": 3,
                    "totalDraws": 0,
                    "totalLosses": 0,
                    "goalsFavor": 9,
                    "goalsOwn": 3,
                    "goalsBalance": 6,
                    "efficiency": "100.00"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/leaderboard/away": {
      "get": {
        "summary": "Get the Leaderboard by away ranking",
        "description": "This endpoint is responsible for getting the leaderboard by away ranking from the database",
        "tags": [
          "leaderboard"
        ],
        "responses": {
          "200": {
            "description": "Leaderboard",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamPoints"
                  }
                },
                "example": [
                  {
                    "name": "Palmeiras",
                    "totalPoints": 6,
                    "totalGames": 2,
                    "totalVictories": 2,
                    "totalDraws": 0,
                    "totalLosses": 0,
                    "goalsFavor": 7,
                    "goalsOwn": 0,
                    "goalsBalance": 7,
                    "efficiency": "100.00"
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Team": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "teamname": {
            "type": "string"
          }
        }
      },
      "Match": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "homeTeam": {
            "type": "number"
          },
          "homeTeamGoals": {
            "type": "number"
          },
          "awayTeam": {
            "type": "number"
          },
          "awayTeamGoals": {
            "type": "number"
          },
          "inProgress": {
            "type": "boolean"
          },
          "teamHome": {
            "type": "object",
            "properties": {
              "teamName": {
                "type": "string"
              }
            }
          },
          "teamAway": {
            "type": "object",
            "properties": {
              "teamName": {
                "type": "string"
              }
            }
          }
        }
      },
      "MatchToCreate": {
        "type": "object",
        "properties": {
          "homeTeam": {
            "type": "number"
          },
          "awayTeam": {
            "type": "number"
          },
          "homeTeamGoals": {
            "type": "number"
          },
          "awayTeamGoals": {
            "type": "number"
          }
        }
      },
      "CreatedMatch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "homeTeam": {
            "type": "number"
          },
          "awayTeam": {
            "type": "number"
          },
          "homeTeamGoals": {
            "type": "number"
          },
          "awayTeamGoals": {
            "type": "number"
          },
          "inProgress": {
            "type": "boolean"
          }
        }
      },
      "TeamPoints": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "totalPoints": {
            "type": "number"
          },
          "totalGames": {
            "type": "number"
          },
          "totalVictories": {
            "type": "number"
          },
          "totalDraws": {
            "type": "number"
          },
          "totalLosses": {
            "type": "number"
          },
          "goalsFavor": {
            "type": "number"
          },
          "goalsOwn": {
            "type": "number"
          },
          "goalsBalance": {
            "type": "number"
          },
          "efficiency": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}